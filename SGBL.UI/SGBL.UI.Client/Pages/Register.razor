@page "/register"

<PageTitle>Register</PageTitle>

@using SGBL.Data.Models
@using SGBL.Data.Contexts
@using Microsoft.EntityFrameworkCore;
@using SGBL.Business.Interfaces

@inject IUserService UserService
@inject LibraryDbContext DbContext

@layout MainLayout

<h3>Registro</h3>

<div class="form-container">
    <EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmit" FormName="registerForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="userName">Name:</label>
            <InputText id="userName" class="form-control" @bind-Value="registerModel.Name" />
        </div>
        <div class="mb-3">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="registerModel.Email" />
        </div>
        <div class="mb-3">
            <label for="password">Password:</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
        </div>
        <div class="mb-3">
            <label for="confirmPassword">Confirm Password:</label>
            <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="registerModel.ConfirmPassword" />
        </div>
        <button class="btn btn-primary" type="submit">Register</button>
    </EditForm>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleValidSubmit()
    {
        try
        {
            if (registerModel.Password != registerModel.ConfirmPassword)
            {
                Console.WriteLine("Las contraseñas no coinciden");
                return;
            }

            var existingUser = await DbContext.Users
                .FirstOrDefaultAsync(u => u.Email == registerModel.Email);

            if (existingUser != null)
            {
                Console.WriteLine("El correo ya está registrado");
                return;
            }

            var newUser = new User
                {
                    Name = registerModel.Name,
                    Email = registerModel.Email,
                    Password = registerModel.Password
                };

            DbContext.Users.Add(newUser);
            await DbContext.SaveChangesAsync();

            Console.WriteLine("Usuario registrado con éxito: " + registerModel.Name);

            registerModel = new RegisterModel();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error al registrar usuario: " + ex.Message);
        }
    }

    public class RegisterModel
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public string ConfirmPassword { get; set; }
    }
}
